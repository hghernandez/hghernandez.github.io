frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
UK$Composicion_segmento
View(UK$tabla_rfm %>%
filter(segmento == 'Otros')%>%
group_by(recency_cut,frequency_cut,monetary_cut)%>%
summarise(costumer= n_distinct(user_id)))
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,4,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,3,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,3,4,1)
UK <- segment_rfm(tabla_rfm = tabla_rfm$`United Kingdom`,
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
UK$Composicion_segmento
View(UK$tabla_rfm %>%
filter(segmento == 'Otros')%>%
group_by(recency_cut,frequency_cut,monetary_cut)%>%
summarise(costumer= n_distinct(user_id)))
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,4,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,4,4,1)
UK <- segment_rfm(tabla_rfm = tabla_rfm$`United Kingdom`,
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
UK$Composicion_segmento
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,3,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,3,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,3,4,1)
UK <- segment_rfm(tabla_rfm = tabla_rfm$`United Kingdom`,
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
UK$Composicion_segmento
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,4,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,4,4,1)
UK <- segment_rfm(tabla_rfm = tabla_rfm$`United Kingdom`,
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
UK$Composicion_segmento
View(UK$tabla_rfm %>%
filter(segmento == 'Otros')%>%
group_by(recency_cut,frequency_cut,monetary_cut)%>%
summarise(costumer= n_distinct(user_id)))
FR <- segment_rfm(tabla_rfm = tabla_rfm$France,
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper)
FR$Composicion_segmento
View(UK$tabla_rfm)
df <- read.csv(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/data/data.csv"))
summary(df)
glimpse(df)
summarytools::dfSummary(df)
summarytools::dfSummary(df,style = "rmarkdown")
summarytools::dfSummary(df,style = "grid")
View(summarytools::dfSummary(df,style = "grid"))
df <- df %>%
mutate(Date= as_date(lubridate::mdy_hm(InvoiceDate)))%>%
group_by(Country,Date,CustomerID)%>%
summarise(Quantity= sum(Quantity),
Monetary= sum(UnitPrice)) %>%
filter_if(is.numeric, ~ .x > 0)
view(summarytools::dfSummary(df,style = "grid"))
view(summarytools::dfSummary(df,style = "grid"))
summarytools::view(summarytools::dfSummary(df,style = "grid"))
df <- read.csv(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/data/data.csv"))
summarytools::view(summarytools::dfSummary(df, plain.ascii  = FALSE,
style        = "grid",
graph.magnif = 0.75,
valid.col    = FALSE,
tmp.img.dir  = "/tmp"))
summarytools::view(summarytools::dfSummary(df, plain.ascii  = FALSE,
style        = "grid",
graph.magnif = 0.75,
valid.col    = FALSE,
tmp.img.dir  = "/tmp",
))
summarytools::st_options(lang = 'es')
summarytools::view(summarytools::dfSummary(df, plain.ascii  = FALSE,
style        = "grid",
graph.magnif = 0.75,
valid.col    = FALSE,
tmp.img.dir  = "/tmp"))
df
df <- df %>%
mutate(Date= as_date(lubridate::mdy_hm(InvoiceDate)))%>%
group_by(Country,Date,CustomerID)%>%
summarise(Quantity= sum(Quantity),
Monetary= sum(UnitPrice)) %>%
filter_if(is.numeric, ~ .x > 0)
df
DT::datatable(df,filter= 'top',options = options = list(pageLength = 5, dom = 'tip'))
DT::datatable(df,filter= 'top',options = list(pageLength = 5, dom = 'tip'))
df <- df %>%
mutate(Date= as_date(lubridate::mdy_hm(InvoiceDate)))%>%
group_by(Country,Date,CustomerID)%>%
summarise(Quantity= sum(Quantity),
Monetary= sum(UnitPrice))%>%
filter(Country %in% c("United Kingdom","Germany","France"))
df <- read.csv(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/data/data.csv"))
df <- df %>%
mutate(Date= as_date(lubridate::mdy_hm(InvoiceDate)))%>%
group_by(Country,Date,CustomerID)%>%
summarise(Quantity= sum(Quantity),
Monetary= sum(UnitPrice)) %>%
filter(Country %in% c("United Kingdom","Germany","France")) %>%
filter_if(is.numeric, ~ .x > 0)
df <- normalize_table(df = df,
date = "Date",
id_costumer = "CustomerID",
cantidad = "Quantity",
monto = "Monetary")
DT::datatable(df,filter= 'top',options = list(pageLength = 5, dom = 'tip'))
tabla_rfm <- df %>%
mutate(email= "cliente@rfm.com")%>%
split(.$Country) %>%
map(~ rfm_category(df = .,
fecha_analisis = '2011-12-09',
bins = 4,
group_by = "Country"))
tabla_rfm$`United Kingdom`$resultado_rfm
tabla_rfm$`United Kingdom`$threshold
length(tabla_rfm)
tabla_rfm[[1]]$resultado_rfm$Country
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Region),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%     kableExtra::kable_styling(bootstrap_options = c("striped", "hover"))%>%
kableExtra::row_spec(0, bold = T, color = "white",background = "#9D00FF"))
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%
kableExtra::kable_classic_2())
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover"))%>%
kableExtra::row_spec(0, bold = T, color = "white",background = "#191C3C"))
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%
kableExtra::kable_classic_2() %>%
kableExtra::row_spec(0, bold = T, color = "white",background = "#191C3C"))
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%
kableExtra::kable_minimal() %>%
kableExtra::row_spec(0, bold = T, color = "white",background = "#191C3C"))
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T) %>%
kableExtra::kable_paper())
print(kableExtra::kbl(tabla_rfm[[1]]$threshold,
format.args = list(decimal.mark = ',', big.mark = "."), col.names = rep(c("lower","upper"),3),
caption = paste0("Puntos de corte scoring. ",unique(tabla_rfm[[i]]$resultado_rfm$Country),"."))%>%
kableExtra::add_header_above(c("Recency" = 2, "Frequency" = 2, "Monetary"= 2),color = "#191C3C", bold = T,align = "center") %>%
kableExtra::kable_paper())
DT::datatable(tabla_rfm[[1]]$resultado_rfm %>% head(10),filter= 'top',options = list(pageLength = 5, dom = 'tip'))
rfm <- list()
for(i in 1:length(tabla_rfm)){
rfm[[i]] <- segment_rfm(tabla_rfm = tabla_rfm[[i]],
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper
)
}
rfm[[1]]$tabla_rfm
rfm[[1]]$bar_chart
rfm[[1]]$Composicion_segmento
rfm[[1]]$bar_chart_seg
print(kableExtra::kbl(rfm[[1]]$tabla_rfm %>%
group_by(segmento) %>%
summarise(Tx= sum(frequency),
Vol = sum(monetary))%>%
mutate('%_Tx'= round(Tx*100/sum(Tx),1),
'%_Vol'= round(Vol*100/sum(Vol),1))%>%
select(segmento,Tx,`%_Tx`,Vol,`%_Vol`) %>%
arrange(desc(Tx))))
tabla_rfm$
#Cargo la función de segmentación
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/segment_rfm.R"),encoding = "UTF-8")
tabla_rfm$
#Cargo la función de segmentación
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/segment_rfm.R"),encoding = "UTF-8")
ruta <- paste0(getwd(),"/_posts/")
load(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/data_test/UT_rfm.Rdata"))
ruta <- paste0(getwd(),"/_posts/")
df <- read.csv(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/data/data.csv"))
df <- df %>%
mutate(Date= as_date(lubridate::mdy_hm(InvoiceDate)))%>%
group_by(Country,Date,CustomerID)%>%
summarise(Quantity= sum(Quantity),
Monetary= sum(UnitPrice)) %>%
filter(Country %in% c("United Kingdom","Germany","France")) %>%
filter_if(is.numeric, ~ .x > 0)
df <- normalize_table(df = df,
date = "Date",
id_costumer = "CustomerID",
cantidad = "Quantity",
monto = "Monetary")
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/normalize_table.R"),encoding = "UTF-8")
df <- normalize_table(df = df,
date = "Date",
id_costumer = "CustomerID",
cantidad = "Quantity",
monto = "Monetary")
DT::datatable(df,filter= 'top',options = list(pageLength = 5, dom = 'tip'))
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/rfm_category.R"),encoding = "UTF-8")
tabla_rfm <- df %>%
mutate(email= "cliente@rfm.com")%>%
split(.$Country) %>%
map(~ rfm_category(df = .,
fecha_analisis = '2011-12-09',
bins = 4,
group_by = "Country"))
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/segment_rfm.R"),encoding = "UTF-8")
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,4,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,4,4,1)
rfm <- list()
for(i in 1:length(tabla_rfm)){
rfm[[i]] <- segment_rfm(tabla_rfm = tabla_rfm[[i]],
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper
)
}
source(paste0(ruta,"/2022-08-27-analisis-rfm-para-la-segmentacion-de-clientes/Modulos/segment_rfm.R"),encoding = "UTF-8")
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,1,1)
recency_upper <-   c(4,4,4,4,2,1)
frequency_lower <- c(4,4,1,2,4,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,4,1)
monetary_upper <-  c(4,4,4,4,4,1)
rfm <- list()
for(i in 1:length(tabla_rfm)){
rfm[[i]] <- segment_rfm(tabla_rfm = tabla_rfm[[i]],
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper
)
}
rfm[[1]]$impact_segment
rfm[[3]]$impact_segment
rfm[[1]]$impact_segment
rfm[[2]]$impact_segment
rfm[[3]]$tabla_rfm
View(rfm[[3]]$tabla_rfm %>%
filter(segmento=='Otros')%>%
group_by(recency_cut,frequency_cut,monetary_cut)%>%
summarise(n= n_distinct(user_id))%>%
arrange(desc(n)))
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","Can’t Lose Them","Hibernating")
recency_lower <-   c(4,1,1,2,4,1)
recency_upper <-   c(4,4,4,4,4,1)
frequency_lower <- c(4,4,1,2,1,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,1,1)
monetary_upper <-  c(4,4,4,4,4,1)
rfm <- list()
for(i in 1:length(tabla_rfm)){
rfm[[i]] <- segment_rfm(tabla_rfm = tabla_rfm[[i]],
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper
)
}
rfm[[1]]$Composicion_segmento
rfm[[3]]$Composicion_segmento
rfm[[3]]$impact_segment
nombres_segmentos <- c("Champions","Loyalist","Big Spenders",
"Promising","New Customers","Hibernating")
recency_lower <-   c(4,1,1,2,4,1)
recency_upper <-   c(4,4,4,4,4,1)
frequency_lower <- c(4,4,1,2,1,1)
frequency_upper <- c(4,4,4,4,4,1)
monetary_lower <-  c(4,1,4,2,1,1)
monetary_upper <-  c(4,4,4,4,4,1)
rfm <- list()
for(i in 1:length(tabla_rfm)){
rfm[[i]] <- segment_rfm(tabla_rfm = tabla_rfm[[i]],
nombres_segmentos = nombres_segmentos,
recency_lower,
recency_upper,
frequency_lower,
frequency_upper,
monetary_lower,
monetary_upper
)
}
rfm[[3]]$Composicion_segmento
rfm[[3]]$impact_segment
length(rfm)
print(kableExtra::kbl(rfm[[3]]$Composicion_segmento,
format.args = list(decimal.mark = ',', big.mark = ".")) %>%
kableExtra::kable_paper())
print(kableExtra::kbl(rfm[[3]]$impact_segment,
format.args = list(decimal.mark = ',', big.mark = ".")) %>%
kableExtra::kable_paper())
print(kableExtra::kbl(rfm[[3]]$impact_segment,
col.names = c("Segmentos","Ventas","%","Monto","%"),
format.args = list(decimal.mark = ',', big.mark = ".")) %>%
kableExtra::kable_paper())
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
comment = "##"
)
library(DBI)
library(odbc)
library(dplyr)
library(dbplyr)
library(lubridate)
library(tidyr)
library(purrr)
library(ggplot2)
#Cargo las funciones
source("Modulos/create_seasonal.R") #Diagnostico estacionalidad
source("Modulos/heatmap_calendar.R") #Mapa de calor en calendarios
#Cargo el analisis
load("estacionalidad.RData")
load("heat_map.RData")
#Cargo el dataset
load("dataset_estac.RData")
library(DBI)
library(odbc)
library(dplyr)
library(dbplyr)
library(lubridate)
library(tidyr)
library(purrr)
library(ggplot2)
#Cargo las funciones
source("Modulos/create_seasonal.R",encoding= "UTF-8") #Diagnostico estacionalidad
source("Modulos/heatmap_calendar.R",encoding= "UTF-8") #Mapa de calor en calendarios
#Cargo el analisis
load("estacionalidad.RData")
load("heat_map.RData")
#Cargo el dataset
load("dataset_estac.RData")
kableExtra::kbl(summary(data),
format.args = list(decimal.mark = ',', big.mark = ".")) %>%
kableExtra::kable_paper("hover", full_width = F)
estacionalidad <- data %>%
mutate(nombre= Merchant) %>%
nest(column_nest= -c(Merchant)) %>%
mutate(seasonal_dx = map(column_nest, ~ create.seasonal(df = .,
date = "Fecha")))
xaringanExtra::use_panelset()
for(i in 1:length(estacionalidad$seasonal_dx)){
cat("::: {.panel}\n")
cat("\n")
cat("###", estacionalidad$Merchant[i] , "{.panel-name}\n")
print(estacionalidad$seasonal_dx[[i]]$grafico)
cat("\n")
cat(":::\n")
}
heatmap_calendar <- data %>%
mutate(nombre= Merchant) %>%
nest(column_nest= -c(Merchant)) %>%
mutate(heatmap_calendar = map(column_nest,~heatmap.calendar(df = .,
fini = '01-06-2021',
ffin = '31-12-2021',
ColorBrewer = "GnBu"))))
heatmap_calendar <- data %>%
mutate(nombre= Merchant) %>%
nest(column_nest= -c(Merchant)) %>%
mutate(heatmap_calendar = map(column_nest,~heatmap.calendar(df = .,
fini = '01-06-2021',
ffin = '31-12-2021',
ColorBrewer = "GnBu")))
for(i in 1:length(heatmap_calendar$heatmap_calendar)){
cat("::: {.panel}\n")
cat("\n")
cat("###", heatmap_calendar$Merchant[i] , "{.panel-name}\n")
print(heatmap_calendar$heatmap_calendar[[i]])
cat("\n")
cat(":::\n")
}
library(sf)
library(leaflet)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(leaflet.extras2)
library(osrm)
library(sf)
library(leaflet)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
library(leaflet.extras2)
library(osrm)
geo_gchu <- "https://geo.gualeguaychu.gov.ar/geoserver/gis/wms?Request=GetCapabilities"
layers <- st_layers("WFS:https://geo.gualeguaychu.gov.ar/geoserver/gis/wms?Request=GetCapabilities")
#Extraemos las areas programaticas
areas_programaticas <- st_read("WFS:https://geo.gualeguaychu.gov.ar/geoserver/gis/wms?Request=GetCapabilities",
"gis:areas_programaticas")
est_salud <- st_read("WFS:https://geo.gualeguaychu.gov.ar/geoserver/gis/wms?Request=GetCapabilities",
"gis:est_salud")
radios_censales <- st_read("WFS:https://geo.gualeguaychu.gov.ar/geoserver/gis/wms?Request=GetCapabilities",
"gis:radios_censales")
radios_censales <- radios_censales %>%
filter(!gml_id %in% c("radios_censales.2","radios_censales.11"))
csalud <- est_salud %>% st_drop_geometry()
csalud <- st_as_sf(csalud[c("fid","nombre","longitud","latitud")], coords = c("longitud", "latitud"),
crs = 4326, remove= FALSE) %>% st_transform(crs = 4326)
est_salud <- st_transform(est_salud, 4326)
areas_programaticas <- st_transform(areas_programaticas, 4326)
areas_programaticas <- st_cast(areas_programaticas, "GEOMETRYCOLLECTION") %>% st_collection_extract("POLYGON")
radios_censales <- st_transform(radios_censales, 4326)
radios_censales <- st_cast(radios_censales, "GEOMETRYCOLLECTION") %>% st_collection_extract("POLYGON")
radios_censales$centroides <- radios_censales %>%  st_centroid() %>%
st_geometry()
centroides <- radios_censales %>%
select(gml_id)%>%
st_centroid() %>%
st_as_sf()
join2 <- st_join(join,radios_censales,join= st_intersects)
join <- st_join(areas_programaticas,csalud,join= st_intersects)
join2 <- st_join(join,radios_censales,join= st_intersects)
DT::datatable(join2 %>% st_drop_geometry() %>% head(5),
options = list(scrollx=TRUE))
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
comment = "##",
R.options = list(width = 60)
)
DT::datatable(join2 %>% st_drop_geometry() %>% head(5),
options = list(scrollx=TRUE))
DT::datatable(join2 %>% st_drop_geometry() %>% head(5),
options = list(scrollX=TRUE))
